{"version":3,"sources":["ScrapedData.js","DropdownSearch.js","App.js","index.js"],"names":["ScrapedData","props","type","keyword","start","chng","onChange","useState","state","setState","unregistered","setUnregistred","useEffect","fetchUsers","a","axios","get","then","res","data","responseData","console","log","results","info_stat","Fragment","style","boxShadow","background","backgroundColor","borderRadius","border","display","cursor","fontSize","fontWeight","padding","textDecoration","textShadow","filename","Table","color","key","inverted","Header","Row","HeaderCell","Body","Cell","total_sp","toLocaleString","total_sp_no","Number","toFixed","total_views","Radio","toggle","label","onClick","celled","map","track","pfrs","error","artist","id","song","album","href","uri","isrc","popularity","playCountSpotify","yt_views","DropdownSearch","value","setValue","setKeyword","handleChange","event","load","setLoad","setStart","Segment","basic","textAlign","Form","Field","e","target","placeholder","name","checked","Button","primary","Divider","horizontal","Dimmer","active","Loader","val","styleLink","document","createElement","rel","head","appendChild","App","children","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.56eab82d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Radio,Table } from 'semantic-ui-react';\r\nimport axios from \"axios\";\r\nimport CsvDownload from 'react-json-to-csv';\r\n// import { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\n\r\nconst ScrapedData = (props) => {\r\n\r\n  const type = props.type;\r\n  const keyword = props.keyword;\r\n  const start=props.start;\r\n  const chng=props.onChange;\r\n  const [state, setState] = useState(\"\");\r\n  const [unregistered,setUnregistred]= useState(false);\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await axios\r\n          .get(`/api/search?type=${type}&keyword=${keyword}`)\r\n          .then((res) => setState(res.data));\r\n\r\n        setState(responseData.data);\r\n        \r\n      } catch (err) {}\r\n    };\r\n    if(start){\r\n  console.log(keyword);\r\n    fetchUsers();\r\n\r\n  }\r\n  }, [type, keyword,start]);\r\n\r\n\r\nif (state.results) {\r\n  chng(start);\r\n  console.log(state.info_stat);\r\n  return (\r\n    <React.Fragment>\r\n          <CsvDownload data={state.results}\r\n          style={{ //pass other props, like styles\r\n            boxShadow:\"inset 0px 1px 0px 0px #5ab3f2\",\r\n            background:\"linear-gradient(to bottom, #5ab3f2 5%, #5ab3f2 100%)\",\r\n            backgroundColor:\"#5ab3f2\",\r\n            borderRadius:\"6px\",\r\n            border:\"1px solid #5ab3f2\",\r\n            display:\"inline-block\",\r\n            cursor:\"pointer\",\"color\":\"#ffffff\",\r\n            fontSize:\"15px\",\r\n            fontWeight:\"bold\",\r\n            padding:\"6px 24px\",\r\n            textDecoration:\"none\",\r\n            textShadow:\"0px 1px 0px #9b14b3\"\r\n            }} filename={type+\"_\"+keyword+\".csv\"} />\r\n            <Table color='blue' key='blue' inverted>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>Spotify streams</Table.HeaderCell>\r\n            <Table.HeaderCell>Spotify unregistered streams</Table.HeaderCell>\r\n            <Table.HeaderCell>% unregistered </Table.HeaderCell>\r\n            <Table.HeaderCell>YouTube streams</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n\r\n        <Table.Body>\r\n          <Table.Row>\r\n            <Table.Cell>{(state.info_stat.total_sp).toLocaleString('en-US')}</Table.Cell>\r\n            <Table.Cell>{(state.info_stat.total_sp_no).toLocaleString('en-US')}</Table.Cell>\r\n            <Table.Cell>{Number(((state.info_stat.total_sp_no/state.info_stat.total_sp)*100).toFixed(2))}%</Table.Cell>\r\n            <Table.Cell>{(state.info_stat.total_views).toLocaleString('en-US')}</Table.Cell>\r\n          </Table.Row>\r\n        </Table.Body>\r\n      </Table>\r\n      <Radio toggle  label={unregistered ? 'unregistered':'registred'} onClick={()=>setUnregistred(!unregistered)}/>\r\n<Table celled inverted >\r\n    <Table.Row></Table.Row>  \r\n    <Table.Row></Table.Row>\r\n    <Table.Row></Table.Row>\r\n    <Table.Row></Table.Row> \r\n    <Table.Header>\r\n        <Table.HeaderCell>Artist</Table.HeaderCell>\r\n        <Table.HeaderCell>ID</Table.HeaderCell>\r\n        <Table.HeaderCell>Song</Table.HeaderCell>\r\n        <Table.HeaderCell>Album</Table.HeaderCell>\r\n        <Table.HeaderCell>URI</Table.HeaderCell>\r\n        <Table.HeaderCell>ISRC</Table.HeaderCell>\r\n        <Table.HeaderCell>Popularity</Table.HeaderCell>\r\n        <Table.HeaderCell>Spotify streams</Table.HeaderCell>\r\n        <Table.HeaderCell>YouTube streams</Table.HeaderCell>\r\n    </Table.Header>\r\n    <Table.Body >\r\n    {state.results.map((track) => (\r\n      unregistered===(track.pfrs==='no') &&\r\n      <Table.Row error={'no'===track.pfrs}>\r\n        <Table.Cell>{track.artist}</Table.Cell>\r\n        <Table.Cell>{track.id}</Table.Cell>\r\n        <Table.Cell>{track.song}</Table.Cell>\r\n        <Table.Cell>{track.album}</Table.Cell>\r\n        <Table.Cell><a href={track.uri}>Spotify App</a></Table.Cell>\r\n        <Table.Cell >{track.isrc}</Table.Cell>\r\n        <Table.Cell>{track.popularity}</Table.Cell>\r\n        <Table.Cell>{(track.playCountSpotify).toLocaleString('en-US')}</Table.Cell>\r\n        <Table.Cell>{(track.yt_views).toLocaleString('en-US')}</Table.Cell>\r\n      </Table.Row>\r\n    ))}\r\n    </Table.Body>\r\n  </Table>\r\n  {/* <Doughnut data={state.results.popularity} /> */}\r\n  </React.Fragment>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n};\r\nexport default ScrapedData;\r\n","import React, { useState } from 'react';\r\nimport {Dimmer, Loader, Button, Radio ,Divider, Form, Segment } from 'semantic-ui-react'\r\nimport ScrapedData from \"./ScrapedData\";\r\n\r\n// const options = [\r\n//     { key: 'artist', text: 'Artist', value: 'artist' },\r\n//     { key: 'song', text: 'Song', value: 'song' },\r\n//     { key: 'isrc', text: 'ISRC', value: 'isrc' },\r\n//   ]\r\n\r\n\r\nconst DropdownSearch = () => {\r\n\r\nconst [value,setValue]=useState('artist');\r\nconst [keyword,setKeyword]=useState('');\r\nconst handleChange = (event, {value}) => setValue(value);\r\nconst [load,setLoad]=useState(false);\r\nconst [start,setStart]=useState(false);\r\nconst handleSubmit=()=>{\r\n  console.log(\"this is the value : \"+keyword);\r\n  if(keyword !== \"\"){\r\n  setStart(true);\r\n  setLoad(true);}\r\n}\r\nconst handleStop =(val)=>{\r\n  console.log('this is valStop :'+val);\r\n   if(val===start){\r\n     setLoad(false);\r\n     setStart(false);\r\n    }else{\r\n      setLoad(true);\r\n    }\r\n   };\r\n\r\n  return(\r\n<Segment basic textAlign='center'>\r\n<Form>\r\n    <Form.Field>\r\n      <label>Search</label>\r\n      <input onChange={(e)=>{setKeyword(e.target.value)}} placeholder='Search...' />\r\n    </Form.Field>\r\n    <Form.Field>\r\n          <Radio\r\n            label='Artist'\r\n            name='radioGroup'\r\n            value='artist'\r\n            checked={value === 'artist'}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Radio\r\n            label='Song'\r\n            name='radioGroup'\r\n            value='song'\r\n            checked={value === 'song'}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n        <Form.Field>\r\n          <Radio\r\n            label='ISRC'\r\n            name='radioGroup'\r\n            value='isrc'\r\n            checked={value === 'isrc'}\r\n            onChange={handleChange}\r\n          />\r\n        </Form.Field>\r\n    <Button primary type='submit' onClick={handleSubmit}>Search</Button>\r\n    <Divider horizontal>Results</Divider>\r\n    <Dimmer active={load} inverted>\r\n        <Loader inverted>Scraping...</Loader>\r\n      </Dimmer>\r\n  </Form>\r\n  <ScrapedData type={value} keyword={keyword} start={start} onChange={handleStop} />\r\n  </Segment>\r\n  );\r\n}\r\n  export default DropdownSearch;\r\n  ","import React  from \"react\";\r\nimport DropdownSearch from \"./DropdownSearch\";\r\n\r\n\r\nconst App = ({ children }) => (\r\n  <React.Fragment>\r\n  <DropdownSearch/>\r\n  </React.Fragment>\r\n\r\n);\r\n\r\n// TODO: Switch to https://github.com/palmerhq/the-platform#stylesheet when it will be stable\r\nconst styleLink = document.createElement(\"link\");\r\nstyleLink.rel = \"stylesheet\";\r\nstyleLink.href = \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\r\ndocument.head.appendChild(styleLink);\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <App/>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n"],"sourceRoot":""}